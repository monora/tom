
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_night_ac_zue.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_night_ac_zue.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_night_ac_zue.py:


Example: Night Train from Amsterdam to Zürich
=============================================

.. GENERATED FROM PYTHON SOURCE LINES 6-10

.. code-block:: default

    from tom.plot import plot_train, plot_graph
    from tom.tom import make_train_from_yml, TrainRun, RouteSection, Route
    from tom.util import example








.. GENERATED FROM PYTHON SOURCE LINES 11-12

Load example nigth train 2021/22 from yaml specification

.. GENERATED FROM PYTHON SOURCE LINES 12-15

.. code-block:: default

    _, t_spec_file = example('../tests/data', 'ac-zue')
    print(t_spec_file.read_text())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ---
    coreID: 402403
    sections:
        - departure_station: XNAC
          arrival_station: EEM
          id: 10
          departure_time: '20:00:00'
          travel_time: '01:30:00'
          calendar:
            begin: &b-begin '2021-12-12'
            end: &b-end '2021-12-31'
            mask: 'Fri Sat'
          color: salmon
          succ:
              - 30
        - departure_station: XNU # Utrecht
          arrival_station: XNVL # Venlo
          id: 20
          departure_time: '20:30:00'
          travel_time: '01:30:00'
          calendar:
            begin: *b-begin
            end: *b-end
            mask: 'Sun'
          color: red
          succ:
              - 40
        - departure_station: EEM
          arrival_station: RXBA # Basel Grenze
          id: 30
          travel_time: '06:00:00'
          color: green
          succ:
              - 50
        - departure_station: XNVL
          arrival_station: RXBA
          id: 40
          travel_time: '06:00:00'
          color: green
          succ:
              - 50
        - departure_station: RXBA
          arrival_station: XSZH # Zürich HB
          id: 50
          travel_time: '01:00:00'
          color: blue






.. GENERATED FROM PYTHON SOURCE LINES 16-17

Create train object and show its train id.

.. GENERATED FROM PYTHON SOURCE LINES 17-20

.. code-block:: default

    t = make_train_from_yml(t_spec_file)
    t.train_id()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'TR/8350/402403/2021'



.. GENERATED FROM PYTHON SOURCE LINES 21-24

Timetable
^^^^^^^^^
Show timetable as dataframe

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: default

    df = t.to_dataframe()
    df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Departure XNU</th>
          <th>Arrival XNVL</th>
          <th>Departure XNVL</th>
          <th>Departure XNAC</th>
          <th>Arrival EEM</th>
          <th>Departure EEM</th>
          <th>Arrival RXBA</th>
          <th>Departure RXBA</th>
          <th>Arrival XSZH</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>TR/8350/402403/2021/20/2021-12-12</th>
          <td>So 12.12.21 20:30  0</td>
          <td>So 12.12.21 22:00  0</td>
          <td>So 12.12.21 22:00  0</td>
          <td></td>
          <td></td>
          <td></td>
          <td>Mo 13.12.21 04:00  1</td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/10/2021-12-17</th>
          <td></td>
          <td></td>
          <td></td>
          <td>Fr 17.12.21 20:00  0</td>
          <td>Fr 17.12.21 21:30  0</td>
          <td>Fr 17.12.21 21:30  0</td>
          <td>Sa 18.12.21 03:30  1</td>
          <td>Sa 18.12.21 03:30  1</td>
          <td>Sa 18.12.21 04:30  1</td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/10/2021-12-18</th>
          <td></td>
          <td></td>
          <td></td>
          <td>Sa 18.12.21 20:00  0</td>
          <td>Sa 18.12.21 21:30  0</td>
          <td>Sa 18.12.21 21:30  0</td>
          <td>So 19.12.21 03:30  1</td>
          <td>So 19.12.21 03:30  1</td>
          <td>So 19.12.21 04:30  1</td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/20/2021-12-19</th>
          <td>So 19.12.21 20:30  0</td>
          <td>So 19.12.21 22:00  0</td>
          <td>So 19.12.21 22:00  0</td>
          <td></td>
          <td></td>
          <td></td>
          <td>Mo 20.12.21 04:00  1</td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/10/2021-12-24</th>
          <td></td>
          <td></td>
          <td></td>
          <td>Fr 24.12.21 20:00  0</td>
          <td>Fr 24.12.21 21:30  0</td>
          <td>Fr 24.12.21 21:30  0</td>
          <td>Sa 25.12.21 03:30  1</td>
          <td>Sa 25.12.21 03:30  1</td>
          <td>Sa 25.12.21 04:30  1</td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/10/2021-12-25</th>
          <td></td>
          <td></td>
          <td></td>
          <td>Sa 25.12.21 20:00  0</td>
          <td>Sa 25.12.21 21:30  0</td>
          <td>Sa 25.12.21 21:30  0</td>
          <td>So 26.12.21 03:30  1</td>
          <td>So 26.12.21 03:30  1</td>
          <td>So 26.12.21 04:30  1</td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/20/2021-12-26</th>
          <td>So 26.12.21 20:30  0</td>
          <td>So 26.12.21 22:00  0</td>
          <td>So 26.12.21 22:00  0</td>
          <td></td>
          <td></td>
          <td></td>
          <td>Mo 27.12.21 04:00  1</td>
          <td></td>
          <td></td>
        </tr>
        <tr>
          <th>TR/8350/402403/2021/10/2021-12-31</th>
          <td></td>
          <td></td>
          <td></td>
          <td>Fr 31.12.21 20:00  0</td>
          <td>Fr 31.12.21 21:30  0</td>
          <td>Fr 31.12.21 21:30  0</td>
          <td>Sa 01.01.22 03:30  1</td>
          <td>Sa 01.01.22 03:30  1</td>
          <td>Sa 01.01.22 04:30  1</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 28-31

Bildfahrplan
^^^^^^^^^^^^
Show timetable as plot

.. GENERATED FROM PYTHON SOURCE LINES 31-34

.. code-block:: default

    stations = ['XNAC', 'XNU', 'EEM', 'XNVL', 'RXBA', 'XSZH']
    plot_train(t, all_stations=stations)




.. image:: /auto_examples/images/sphx_glr_plot_night_ac_zue_001.png
    :alt: Timetable TR/8350/402403/2021 v1
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 35-38

Route Sections
^^^^^^^^^^^^^^
From which sections the train is composed?

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: default

    section: RouteSection
    for section in t.sections:
        print(section.description(), "\n")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ID        : 10v1
    Calender  : 17/12 to 31/12
    Start   at: 20:00 in XNAC
    Arrival at: 21:30 in EEM
    Successors: [30] 

    ID        : 20v1
    Calender  : 12/12 to 26/12
    Start   at: 20:30 in XNU
    Arrival at: 22:00 in XNVL
    Successors: [40] 

    ID        : 30v1
    Calender  : 17/12 to 31/12
    Start   at: 21:30 in EEM
    Arrival at: 03:30 in RXBA
    Successors: [50] 

    ID        : 40v1
    Calender  : 12/12 to 26/12
    Start   at: 22:00 in XNVL
    Arrival at: 04:00 in RXBA
    Successors: [50] 

    ID        : 50v1
    Calender  : 18/12 to 01/01
    Start   at: 03:30 in RXBA
    Arrival at: 04:30 in XSZH
    Successors: [] 





.. GENERATED FROM PYTHON SOURCE LINES 43-46

Section graph
^^^^^^^^^^^^^
The section graph is computed using the successor relation:

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default


    sg = t.section_graph()
    plot_graph(sg)




.. image:: /auto_examples/images/sphx_glr_plot_night_ac_zue_002.png
    :alt: plot night ac zue
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-55

Routes
^^^^^^
Print all possible routes.
Routes are calculated from all possible paths in the section graph.

.. GENERATED FROM PYTHON SOURCE LINES 55-59

.. code-block:: default

    route: Route
    for route in t.routes():
        print(route.description(), "\n")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Route     : XNAC-EEM-RXBA-XSZH
    Key       : 10-30-50
    Calendar  : 17/12 to 31/12
    Start   at: 20:00 in XNAC
    Arrival at: 21:30 in EEM
    Arrival at: 03:30 in RXBA
    Arrival at: 04:30 in XSZH
 

    Route     : XNU-XNVL-RXBA
    Key       : 20-40
    Calendar  : 12/12 to 26/12
    Start   at: 20:30 in XNU
    Arrival at: 22:00 in XNVL
    Arrival at: 04:00 in RXBA
 





.. GENERATED FROM PYTHON SOURCE LINES 60-64

Section runs
^^^^^^^^^^^^
For each day of the calendar of a section a `SectionRun` is created.
The section runs are the rows of RouteSection.to_dataframe:

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default

    for section in t.sections:
        print(f"{section.section_id}: {section}")
        print(section.to_dataframe(), "\n")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    10: XNAC-EEM
                ID                XNAC                 EEM
    2021-12-17  10 2021-12-17 20:00:00 2021-12-17 21:30:00
    2021-12-18  10 2021-12-18 20:00:00 2021-12-18 21:30:00
    2021-12-24  10 2021-12-24 20:00:00 2021-12-24 21:30:00
    2021-12-25  10 2021-12-25 20:00:00 2021-12-25 21:30:00
    2021-12-31  10 2021-12-31 20:00:00 2021-12-31 21:30:00 

    20: XNU-XNVL
                ID                 XNU                XNVL
    2021-12-12  20 2021-12-12 20:30:00 2021-12-12 22:00:00
    2021-12-19  20 2021-12-19 20:30:00 2021-12-19 22:00:00
    2021-12-26  20 2021-12-26 20:30:00 2021-12-26 22:00:00 

    30: EEM-RXBA
                ID                 EEM                RXBA
    2021-12-17  30 2021-12-17 21:30:00 2021-12-18 03:30:00
    2021-12-18  30 2021-12-18 21:30:00 2021-12-19 03:30:00
    2021-12-24  30 2021-12-24 21:30:00 2021-12-25 03:30:00
    2021-12-25  30 2021-12-25 21:30:00 2021-12-26 03:30:00
    2021-12-31  30 2021-12-31 21:30:00 2022-01-01 03:30:00 

    40: XNVL-RXBA
                ID                XNVL                RXBA
    2021-12-12  40 2021-12-12 22:00:00 2021-12-13 04:00:00
    2021-12-19  40 2021-12-19 22:00:00 2021-12-20 04:00:00
    2021-12-26  40 2021-12-26 22:00:00 2021-12-27 04:00:00 

    50: RXBA-XSZH
                ID                RXBA                XSZH
    2021-12-18  50 2021-12-18 03:30:00 2021-12-18 04:30:00
    2021-12-19  50 2021-12-19 03:30:00 2021-12-19 04:30:00
    2021-12-25  50 2021-12-25 03:30:00 2021-12-25 04:30:00
    2021-12-26  50 2021-12-26 03:30:00 2021-12-26 04:30:00
    2022-01-01  50 2022-01-01 03:30:00 2022-01-01 04:30:00 





.. GENERATED FROM PYTHON SOURCE LINES 69-72

TrainRuns
^^^^^^^^^
Each `TrainRun` defines a row in the timetable of the train above.

.. GENERATED FROM PYTHON SOURCE LINES 72-78

.. code-block:: default

    tr: TrainRun
    for tr in t.train_run_iterator():
        print(tr)
        for sr in tr.sections_runs:
            print(sr)
        print("\n")




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    TR/8350/402403/2021/10/2021-12-17
    10v1:2021-12-17 20:00 OTR=0 XNAC-EEM 2021-12-17 21:30 OTR=0
    30v1:2021-12-17 21:30 OTR=0 EEM-RXBA 2021-12-18 03:30 OTR=1
    50v1:2021-12-18 03:30 OTR=1 RXBA-XSZH 2021-12-18 04:30 OTR=1


    TR/8350/402403/2021/10/2021-12-18
    10v1:2021-12-18 20:00 OTR=0 XNAC-EEM 2021-12-18 21:30 OTR=0
    30v1:2021-12-18 21:30 OTR=0 EEM-RXBA 2021-12-19 03:30 OTR=1
    50v1:2021-12-19 03:30 OTR=1 RXBA-XSZH 2021-12-19 04:30 OTR=1


    TR/8350/402403/2021/10/2021-12-24
    10v1:2021-12-24 20:00 OTR=0 XNAC-EEM 2021-12-24 21:30 OTR=0
    30v1:2021-12-24 21:30 OTR=0 EEM-RXBA 2021-12-25 03:30 OTR=1
    50v1:2021-12-25 03:30 OTR=1 RXBA-XSZH 2021-12-25 04:30 OTR=1


    TR/8350/402403/2021/10/2021-12-25
    10v1:2021-12-25 20:00 OTR=0 XNAC-EEM 2021-12-25 21:30 OTR=0
    30v1:2021-12-25 21:30 OTR=0 EEM-RXBA 2021-12-26 03:30 OTR=1
    50v1:2021-12-26 03:30 OTR=1 RXBA-XSZH 2021-12-26 04:30 OTR=1


    TR/8350/402403/2021/10/2021-12-31
    10v1:2021-12-31 20:00 OTR=0 XNAC-EEM 2021-12-31 21:30 OTR=0
    30v1:2021-12-31 21:30 OTR=0 EEM-RXBA 2022-01-01 03:30 OTR=1
    50v1:2022-01-01 03:30 OTR=1 RXBA-XSZH 2022-01-01 04:30 OTR=1


    TR/8350/402403/2021/20/2021-12-12
    20v1:2021-12-12 20:30 OTR=0 XNU-XNVL 2021-12-12 22:00 OTR=0
    40v1:2021-12-12 22:00 OTR=0 XNVL-RXBA 2021-12-13 04:00 OTR=1


    TR/8350/402403/2021/20/2021-12-19
    20v1:2021-12-19 20:30 OTR=0 XNU-XNVL 2021-12-19 22:00 OTR=0
    40v1:2021-12-19 22:00 OTR=0 XNVL-RXBA 2021-12-20 04:00 OTR=1


    TR/8350/402403/2021/20/2021-12-26
    20v1:2021-12-26 20:30 OTR=0 XNU-XNVL 2021-12-26 22:00 OTR=0
    40v1:2021-12-26 22:00 OTR=0 XNVL-RXBA 2021-12-27 04:00 OTR=1







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.712 seconds)


.. _sphx_glr_download_auto_examples_plot_night_ac_zue.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_night_ac_zue.py <plot_night_ac_zue.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_night_ac_zue.ipynb <plot_night_ac_zue.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
